{{ .EnableAllLanguages }}
{{ $buildOpts := dict 
	"list" "never"
	"publishResources" false
	"render" "never"
}}
{{ $pageContent := dict }}
{{ $page := dict 
	"kind" "home"
	"path" "headless"
	"title" "Home"
	"layout" "home"
	"build" $buildOpts
}}

{{ $ordinalDays := slice "first" "second" "third" "fourth" "fifth" "sixth" "seventh" "eighth" }}

{{ $params := dict }}

{{ $TimeLayoutYear := "2006" }}
{{ $TimeLayoutISO := "2006-01-02" }}

{{ $hebrewYearBaseUrl := "https://www.hebcal.com/converter?cfg=json&gm=11&gd=15g2h=1&strict=1" }}
{{ $thisYear := time.Now | time.Format $TimeLayoutYear }}
{{ $hebrewYearFullUrl := delimit (slice $hebrewYearBaseUrl "&gy=" $thisYear) "" }}

{{ $hebrewYearResponse := resources.GetRemote $hebrewYearFullUrl | transform.Unmarshal }}
{{ $hebrewYear := $hebrewYearResponse.hy }}

{{ $eventsBaseUrl := "https://www.hebcal.com/hebcal?v=1&cfg=json&maj=on&yt=H" }}
{{ $eventsFullUrl := delimit (slice $eventsBaseUrl "&year=" $hebrewYear) "" }}

{{ $response := resources.GetRemote $eventsFullUrl | transform.Unmarshal }}

{{ $dayOfHanukkahFound := false }}
{{ range $i, $value := where $response.items "title" "like" "^Chanukah.*$" }}
	{{ with $value.date | time.AsTime }}
		{{ if and (lt time.Now .) (eq $dayOfHanukkahFound false) }}
			{{ $params = merge $params (dict "dayOfHanukkah" $i) }}
			
			{{ if gt $i 0 }}
				{{ $moreParams := dict
					"isHanukkah" true
					"ordinalDay" (collections.Index $ordinalDays (sub $i 1))
				}}
				{{ $params = merge $params $moreParams }}
			{{ else }}
				{{ $moreParams := dict
					"isHanukkah" false
					"isBefore" true
				}}
				{{ $params = merge $params $moreParams }}
			{{ end }}

			{{ $dayOfHanukkahFound = true }}
		{{ end }}

		{{ if eq $i 0 }}
			{{ $params = merge $params (dict "startDate" ($value.date | time.Format ":date_full")) }}
		{{ else if eq $i 8 }}
			{{ $params = merge $params (dict "endDate" ($value.date | time.Format ":date_full")) }}
		{{ end }}
	{{ end }}
{{ end }}

{{ if ne $dayOfHanukkahFound true }}
	{{ $moreParams := dict
		"isHanukkah" false
		"isBefore" false
	}}
	{{ $params = merge $params $moreParams }}
{{ end }}

{{ $content := dict
	"mediaType" "text/markdown"
	"value" "Hello?"
}}

{{ $page = merge $page (dict "content" $content "params" $params) }}

{{ .AddPage $page }}